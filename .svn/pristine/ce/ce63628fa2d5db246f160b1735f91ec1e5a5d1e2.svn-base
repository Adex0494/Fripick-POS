export default function splitCalculation(product, productSelected, userSelectedBenefits, callback ){
    var isPharmacy = JSON.parse(sessionStorage.getItem('isPharmacy'));
    var productsSelected = productSelected || [];
    var catalogSelected = JSON.parse(sessionStorage.getItem('catalogSelected'));
    var companyAndBranchSelected = JSON.parse(sessionStorage.getItem('companyAndBranchSelected'));

    if(isPharmacy == true){
        if(product.length != 0){
            product.deliveryDate = catalogSelected.deliveryDate;
            product.applyServiceTax = catalogSelected.taxService;
            productsSelected.push(product);
        }
    }else{
        if(product.length != 0){
            if(!product.tenLastProduct){
                product.catalogId = catalogSelected.id;
                product.catalogTypeId = catalogSelected.catalogTypeId;
            }
            product.deliveryDate = catalogSelected.deliveryDate;
            product.applyServiceTax = catalogSelected.taxService;
            productsSelected.push(product);
        }
    }


    sessionStorage.removeItem('newGiftcardValues');
    sessionStorage.removeItem("giftCardsSaved");

    var subtotal = 0,
        tempBenefitsOrder = [],
        subsidyRestrictions = [],
        realBenefits = [],
        benefits = {
            "subsidies": [],
            "asignations": [],
            "diariesAsignations": [],
            "creditsLimits": [],
            "manyCash": [],
            "ARS": []
        };


    for (var i = 0; i < productsSelected.length; i++){
        var userSelectedBenefitsByCatalogsType = JSON.parse(sessionStorage.getItem('userSelectedBenefitsByCatalogsType')) || [];
        var split = [],
            index = 1,
            failure = false,
            sharedPrice = productsSelected[i].price * productsSelected[i].quantity,
            totalTax = 0,
            totalServiceTax = 0,
            newBenefits = [],
            subsidyRestriction = [],
            generalAmountToDiscount = 0,
            userSelectedBenefitsByCatalogsTypeINDEX = 0;

        //Determina que beneficios debe usar el producto actual.
        var finishLoop = false;
        for(var k = 0; k < userSelectedBenefitsByCatalogsType.length; k++){
            if(userSelectedBenefitsByCatalogsType[k].catalogTypeId == productsSelected[i].catalogTypeId){
                if(finishLoop == false){
                    if(userSelectedBenefitsByCatalogsType[k].deliveryDate == productsSelected[i].deliveryDate){
                        tempBenefitsOrder = userSelectedBenefitsByCatalogsType[k];
                        userSelectedBenefitsByCatalogsTypeINDEX = k;
                        finishLoop = true;
                    }
                }else{
                    k = userSelectedBenefitsByCatalogsType.length + 1;
                }
            }
        }

        ////Alimenta la variable 'subsidyRestrictions' y le da formato al subsidio.
        var extractSubsidy = [];
        var subsidyIndex = 0;
        for(var h = 0; h < tempBenefitsOrder.benefitsOrder.length; h++){
            switch (tempBenefitsOrder.benefitsOrder[h].benefitType){
                case "subsidio":
                    var canBePushed = true;
                    if(subsidyRestrictions.length != 0){
                        for(var x = 0;  x < subsidyRestrictions.length; x++){
                            if(subsidyRestrictions[x].deliveryDate == productsSelected[i].deliveryDate){
                                subsidyRestriction = subsidyRestrictions[x];
                                canBePushed = false;
                                x = subsidyRestrictions.length + 1;
                            }
                        }
                    }

                    if(canBePushed){
                        subsidyRestriction = {
                            "id": tempBenefitsOrder.benefitsOrder[h].id,
                            "dayAplicationIndicator": tempBenefitsOrder.benefitsOrder[h].dayAplicationIndicator,
                            "dayAplication": tempBenefitsOrder.benefitsOrder[h].dayAplication,
                            "restriction": tempBenefitsOrder.benefitsOrder[h].restriction,
                            "deliveryDate": productsSelected[i].deliveryDate,
                            "catalogsTypes": []
                        };

                        subsidyRestrictions.push(subsidyRestriction);
                    }

                    for(var w = 0; w < tempBenefitsOrder.benefitsOrder[h].subsidyDetail.length; w++){
                        tempBenefitsOrder.benefitsOrder[h].subsidyDetail[w].benefitType = tempBenefitsOrder.benefitsOrder[h].benefitType;
                        tempBenefitsOrder.benefitsOrder[h].subsidyDetail[w].catalogTypeId = tempBenefitsOrder.catalogTypeId;
                        tempBenefitsOrder.benefitsOrder[h].subsidyDetail[w].order = tempBenefitsOrder.benefitsOrder[h].order;
                        tempBenefitsOrder.benefitsOrder[h].subsidyDetail[w].type = tempBenefitsOrder.benefitsOrder[h].type;
                        tempBenefitsOrder.benefitsOrder[h].subsidyDetail[w].productTypes = tempBenefitsOrder.benefitsOrder[h].productTypes;
                        tempBenefitsOrder.benefitsOrder[h].subsidyDetail[w].deliveryDate = tempBenefitsOrder.deliveryDate;
                        tempBenefitsOrder.benefitsOrder[h].subsidyDetail[w].taxValues = tempBenefitsOrder.benefitsOrder[h].taxValues;
                    }
                    extractSubsidy = tempBenefitsOrder.benefitsOrder[h].subsidyDetail;
                    subsidyIndex = h;
                    break;
                case "asignacion":
                    tempBenefitsOrder.benefitsOrder[h].deliveryDate = tempBenefitsOrder.deliveryDate;
                    tempBenefitsOrder.benefitsOrder[h].discountDate = tempBenefitsOrder.discountDate;
                    break;
                case "asignacionDiaria":
                    tempBenefitsOrder.benefitsOrder[h].deliveryDate = tempBenefitsOrder.deliveryDate;
                    break;
                case "limiteDeCredito":
                    var type = (tempBenefitsOrder.creditLimitIsDaily) ? 'LMD' : 'LMG';
                    tempBenefitsOrder.benefitsOrder[h].type = type;
                    tempBenefitsOrder.benefitsOrder[h].deliveryDate = tempBenefitsOrder.deliveryDate;
                    tempBenefitsOrder.benefitsOrder[h].creditLimitIsDaily = tempBenefitsOrder.creditLimitIsDaily;
                    tempBenefitsOrder.benefitsOrder[h].discountDate = tempBenefitsOrder.discountDate;
                    break;
            }
        }

        if(extractSubsidy.length != 0){
            tempBenefitsOrder.benefitsOrder.splice(subsidyIndex, 1);
            for(var z = 0; z < extractSubsidy.length; z++){
                tempBenefitsOrder.benefitsOrder.unshift(extractSubsidy[z]);
            }
        }

        realBenefits = tempBenefitsOrder;

        if(productsSelected[i].categoryname == "tipo monto"){
            split.push({"id": "18.00", "benefitType": "taxes", "name": "Impuesto Tipo Monto", "amountToDiscount": productsSelected[i].itbisPriceMarket.replace(',', '')});
            sharedPrice = parseFloat(sharedPrice) + parseFloat(productsSelected[i].itbisPriceMarket);
        }else{
            for (var a = 0; a < productsSelected[i].taxTypes.length; a++){
                var taxAmount  = ( productsSelected[i].taxTypes[a] / 100) * productsSelected[i].price  * productsSelected[i].quantity;
                sharedPrice = sharedPrice + taxAmount;
                totalTax = totalTax + taxAmount;
                split.push({"benefitType": "taxes", "id": productsSelected[i].taxTypes[a], "name": sessionStorage.getItem('taxName') +" (" + (productsSelected[i].taxTypes[a] * 1) + "%)", "amountToDiscount": totalTax});
            };
        }


        if(productsSelected[i].applyServiceTax == true){
            var applyServiceTax = 0.1 * productsSelected[i].price * productsSelected[i].quantity;
            sharedPrice = sharedPrice + applyServiceTax;
            totalServiceTax = totalServiceTax + applyServiceTax;
            split.push({"id": "tax10", "benefitType": "tax10", "name": "10% Servicio ", "amountToDiscount": totalServiceTax});

            generalAmountToDiscount = generalAmountToDiscount + totalServiceTax;
        };

        if(userSelectedBenefitsByCatalogsType[userSelectedBenefitsByCatalogsTypeINDEX].giftCards.length > 0){
            realBenefits.benefitsOrder = addGiftCardBenefit(userSelectedBenefitsByCatalogsType[userSelectedBenefitsByCatalogsTypeINDEX].applyAfterSubsidy, realBenefits.benefitsOrder);
        }

        var benefitsOrder = verifyDoubleBenefit(realBenefits.benefitsOrder);

        userSelectedBenefits.benefitsOrder = benefitsOrder;

        var remainder = sharedPrice;
        priceRangeApplied = false;
        for (var e = 0; e < realBenefits.benefitsOrder.length; e++){
            var benefitToApply = getBenefitToApply(e+1 , realBenefits.benefitsOrder, productsSelected[i]);
            switch(benefitToApply.benefitType) {
                case "tarjetaDeRegalo":  // Tarjeta de Regalo


                    if(sharedPrice != 0 && benefitToApply.order == index){

                        var apply = false;
                        if(getPaymentMethodSelected() == "paysheet" && getAccountTypeSelected() == "paysheetAccount"){
                            apply = true;
                        }else {
                            if (getPaymentMethodSelected() != "paysheet" && getAccountTypeSelected() == "paysheetAccount"){
                                if(companyAndBranchSelected.applicableBenefits.useGiftCardPosCash == true){
                                    apply = true;
                                }
                            }
                        }

                        if(apply){
                            var results = giftCard(userSelectedBenefitsByCatalogsType[userSelectedBenefitsByCatalogsTypeINDEX], sharedPrice, benefitToApply.order );

                            for (var h = 0; h < results.length; h++){
                                split.push(results[h]);
                                sharedPrice = results[h].price;
                            }
                        }

                        index++;
                        break;
                    }
                case "subsidio":  // Subsidio

                    if(sharedPrice != 0  && benefitToApply.order == index){
                        var apply = false;
                        if(getPaymentMethodSelected() == "paysheet" && getAccountTypeSelected() == "paysheetAccount"){
                            apply = true;
                        }else {
                            if (getPaymentMethodSelected() != "paysheet" && getAccountTypeSelected() == "paysheetAccount"){
                                if(companyAndBranchSelected.applicableBenefits.useSubsidyPosCash == true){
                                    apply = true;
                                }
                            }
                        }

                        if(apply){
                            subsidy(i, index, benefitToApply, benefits, sharedPrice, productsSelected[i], subsidyRestriction, function (results) {
                                if(results != false){
                                    for(var z = 0; z < subsidyRestrictions.length; z++){
                                        if(subsidyRestrictions[z].deliveryDate == results.deliveryDate){
                                            subsidyRestrictions[z].dayAplication = results.dayAplication;
                                            subsidyRestrictions[z].catalogsTypes.push(results.catalogTypeId);
                                        }
                                    }

                                    newBenefits.push(results);
                                    split.push(results);
                                    sharedPrice = results.price;
                                }
                            });
                        }
                        index++;
                        break;
                    }
                case "asignacionDiaria":  // Asignación Diaria

                    if(sharedPrice != 0 && benefitToApply.order == index){
                        var apply = false;
                        if(getPaymentMethodSelected() == "paysheet" && getAccountTypeSelected() == "paysheetAccount"){
                            apply = true;
                        }else {
                            if (getPaymentMethodSelected() != "paysheet" && getAccountTypeSelected() == "paysheetAccount"){
                                if(companyAndBranchSelected.applicableBenefits.useDailyAssignationPosCash == true){
                                    apply = true;
                                }
                            }
                        }

                        if(apply){
                            diaryAsignation(i, index, benefitToApply, benefits, sharedPrice, productsSelected[i], function (results) {
                                if(results != false){
                                    newBenefits.push(results);
                                    split.push(results);
                                    sharedPrice = results.price;
                                }
                            });
                        }
                        index++;
                        break;
                    }
                case "asignacion":  //  Asignación

                    if(sharedPrice != 0 && benefitToApply.order == index) {
                        var apply = false;
                        if(getPaymentMethodSelected() == "paysheet" && getAccountTypeSelected() == "paysheetAccount"){
                            apply = true;
                        }else {
                            if (getPaymentMethodSelected() != "paysheet" && getAccountTypeSelected() == "paysheetAccount"){
                                if(companyAndBranchSelected.applicableBenefits.useAssignationPosCash == true){
                                    apply = true;
                                }
                            }
                        }

                        if(apply) {
                            asignation(i, index, benefitToApply, benefits, sharedPrice, productsSelected[i], userSelectedBenefits, function (results) {
                                if (results != false) {
                                    newBenefits.push(results);
                                    split.push(results);
                                    sharedPrice = results.price;
                                }
                            });
                        }
                        index++;
                        break;
                    }
                case "limiteDeCredito":
                    if(sharedPrice != 0 && benefitToApply.order == index) {
                        var apply = false;
                        if((getPaymentMethodSelected() == "paysheet" && getAccountTypeSelected() == "paysheetAccount") ||
                            (getPaymentMethodSelected() == "paysheet" && getAccountTypeSelected() == "enterpriseAccount")){
                            apply = true;
                        }

                        if (apply) {
                            creditLimit(i, index, benefitToApply, benefits, sharedPrice, productsSelected[i], realBenefits, function (results) {
                                if (results != false) {

                                    newBenefits.push(results);
                                    split.push(results);
                                    sharedPrice = results.price;

                                    //if(isDeliveryDateToDate()){
                                    //    callback(false)
                                    //}

                                    //if(newBenefits.length > 0){
                                    //    var benef = newBenefits;
                                    //}else{
                                    //    var benef = [];
                                    //}
                                    //
                                    //for (var u = 0; u < benef.length; u++) {
                                    //    if (benef[u].benefitType == "limiteDeCredito") {
                                    //        benef.splice(u, 1);
                                    //    }
                                    //}
                                    //benef.push(results);
                                    //newBenefits = benef;
                                    //split.push(results);
                                    //sharedPrice = results.value;
                                    //}else{
                                    //    if(i < productSelected.length - 1){
                                    //        productsToCashFlow.push(product);
                                    //    }else{
                                    //        sessionStorage.setItem('productsToCashFlow', JSON.stringify(productsToCashFlow));
                                    //        callback(false);
                                    //        failure = true;
                                    //        return false;
                                    //    }
                                }else{
                                    callback(false);
                                    failure = true;
                                    return false;
                                }
                            });
                        }
                        index++;
                        break;
                    }

                case "ARS":
                    if(sharedPrice != 0 && benefitToApply.order == index){
                        var apply = false;
                        if(getIfArsIsAvaliable() == true){
                            apply = true;
                        }

                        if(apply){
                            ars(i, index, benefitToApply, benefits, sharedPrice, productsSelected[i], realBenefits, function(results){
                                if(results != false){
                                    newBenefits.push(results);
                                    split.push(results);
                                    sharedPrice = results.price;
                                }
                            });
                        }

                        index++;
                        break;
                    }

                    break;
                default:  // Efectivo
                    if(sharedPrice != 0 && benefitToApply.order == index){
                        var companyAndBranchSelected = JSON.parse(sessionStorage.getItem('companyAndBranchSelected')) || [];
                        if(companyAndBranchSelected.vendor.cash == true || companyAndBranchSelected.vendor.acceptCard == true){
                            var apply = false;
                            if(getAccountTypeSelected() == "paysheetAccount"){
                                apply = true;
                            }

                            if(apply){
                                cash(i, index, benefitToApply, benefits, sharedPrice, productsSelected[i], realBenefits, function(results){
                                    if(results != false){

                                        //if(isDeliveryDateToDate()){
                                        //    callback(false)
                                        //}

                                        if(newBenefits.length > 0){
                                            var benef = newBenefits;
                                        }else{
                                            var benef = [];
                                        }

                                        for (var u = 0; u < benef.length; u++) {
                                            if (benef[u].benefitType == "cash") {
                                                benef.splice(u, 1);
                                            }
                                        }

                                        benef.push(results);
                                        newBenefits = benef;
                                        split.push(results);
                                        sharedPrice = results.value;
                                        //}else{
                                        //    if(i < productSelected.length - 1){
                                        //        productsToCashFlow.push(product);
                                        //    }else{
                                        //        sessionStorage.setItem('productsToCashFlow', JSON.stringify(productsToCashFlow));
                                        //        callback(false);
                                        //        failure = true;
                                        //        return false;
                                        //    }
                                    }
                                });
                            }
                        }

                        index++;
                        break;
                    }

            }
        };

        if(failure != true){
            productsSelected[i].discountedAmount = remainder - sharedPrice;
            productsSelected[i].benefitsApplied = split;
            productsSelected[i].index = i;
        }
    };
    if(failure != true){
        sessionStorage.setItem('productsSelected', JSON.stringify(productsSelected));
        if(callback){
            callback(true);
        }
    }
}