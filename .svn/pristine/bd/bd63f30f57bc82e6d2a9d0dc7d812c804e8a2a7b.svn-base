{"ast":null,"code":"var _jsxFileName = \"C:\\\\fripick projects\\\\POS\\\\pos\\\\src\\\\components\\\\custom-dropdown\\\\index.js\";\nimport React from 'react';\nimport { StyledAutocomplete, StyledTextField, StyledDiv, StyledIcon, StyledIconContainer } from './custom-dropdown.styled';\nimport { makeStyles } from '@mui/styles';\nimport PropTypes from 'prop-types';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  popupIndicator: {\n    backgroundColor: \"blue\"\n  },\n  endAdornment: {\n    backgroundColor: 'black'\n  }\n}));\nconst CustomDropdown = _ref => {\n  let {\n    options,\n    color,\n    label,\n    noOptionsText,\n    labelPropName,\n    renderOption,\n    Icon\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: /*#__PURE__*/_jsxDEV(StyledAutocomplete, {\n      sx: {\n        \"& .MuiAutocomplete-popupIndicator\": {\n          transform: \"none\"\n        }\n      },\n      id: \"autocomplete\",\n      disableClearable: true,\n      noOptionsText: noOptionsText,\n      options: options,\n      autoHighlight: true,\n      renderOption: renderOption,\n      getOptionLabel: option => option[labelPropName],\n      popupIcon: /*#__PURE__*/_jsxDEV(StyledIconContainer, {\n        children: /*#__PURE__*/_jsxDEV(StyledIcon, {\n          children: /*#__PURE__*/_jsxDEV(BusinessIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this),\n      renderInput: params => /*#__PURE__*/_jsxDEV(StyledTextField, {\n        ...params,\n        sx: {\n          \"& .MuiOutlinedInput-root.Mui-focused\": {\n            \"& > fieldset\": {\n              borderColor: color\n            }\n          }\n        },\n        label: label,\n        InputLabelProps: {\n          style: {\n            color: color\n          }\n        },\n        inputProps: {\n          ...params.inputProps,\n          autoComplete: 'new-password' // disable autocomplete and autofill\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_c = CustomDropdown;\nCustomDropdown.propTypes = {\n  options: PropTypes.object,\n  label: PropTypes.string,\n  color: PropTypes.string,\n  noOptionsText: PropTypes.string,\n  labelPropName: PropTypes.string,\n  renderOption: PropTypes.any\n};\nexport default CustomDropdown;\nvar _c;\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"names":["React","StyledAutocomplete","StyledTextField","StyledDiv","StyledIcon","StyledIconContainer","makeStyles","PropTypes","BusinessIcon","jsxDEV","_jsxDEV","useStyles","theme","popupIndicator","backgroundColor","endAdornment","CustomDropdown","_ref","options","color","label","noOptionsText","labelPropName","renderOption","Icon","children","sx","transform","id","disableClearable","autoHighlight","getOptionLabel","option","popupIcon","fileName","_jsxFileName","lineNumber","columnNumber","renderInput","params","borderColor","InputLabelProps","style","inputProps","autoComplete","_c","propTypes","object","string","any","$RefreshReg$"],"sources":["C:/fripick projects/POS/pos/src/components/custom-dropdown/index.js"],"sourcesContent":["import React from 'react'\r\nimport {StyledAutocomplete, StyledTextField, StyledDiv, StyledIcon, StyledIconContainer} from './custom-dropdown.styled'\r\nimport { makeStyles } from '@mui/styles';\r\nimport PropTypes from 'prop-types';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    popupIndicator: {\r\n      backgroundColor: \"blue\"\r\n    },\r\n    endAdornment: {\r\n        backgroundColor: 'black'\r\n    }\r\n  }));\r\n\r\nconst CustomDropdown = ( {options, color, label, noOptionsText, labelPropName, renderOption, Icon} ) => {\r\n    return <StyledDiv>\r\n        <StyledAutocomplete  \r\n              sx={{\r\n                \"& .MuiAutocomplete-popupIndicator\": { transform: \"none\" },\r\n              }}   \r\n            id=\"autocomplete\"\r\n            disableClearable\r\n            noOptionsText = {noOptionsText}\r\n            options={options}\r\n            autoHighlight\r\n            renderOption={renderOption}\r\n            getOptionLabel={(option) => option[labelPropName]}\r\n            popupIcon={<StyledIconContainer >\r\n            <StyledIcon><BusinessIcon/></StyledIcon>\r\n        </StyledIconContainer>}\r\n            renderInput={(params) => (\r\n            <StyledTextField \r\n            {...params}\r\n            sx={{\r\n                \"& .MuiOutlinedInput-root.Mui-focused\": {\r\n                  \"& > fieldset\": {\r\n            borderColor: color,\r\n                  }\r\n                }\r\n              }}\r\n            label={label}\r\n            InputLabelProps={{\r\n                style: { color: color},\r\n              }}\r\n            inputProps={{\r\n              ...params.inputProps,\r\n              autoComplete: 'new-password', // disable autocomplete and autofill\r\n            }}\r\n            \r\n            />\r\n            )\r\n            }\r\n        />\r\n    </StyledDiv>\r\n}\r\n\r\nCustomDropdown.propTypes = {\r\n    options: PropTypes.object,\r\n    label: PropTypes.string,\r\n    color: PropTypes.string,\r\n    noOptionsText: PropTypes.string,\r\n    labelPropName: PropTypes.string,\r\n    renderOption: PropTypes.any\r\n}\r\n\r\nexport default CustomDropdown"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,kBAAkB,EAAEC,eAAe,EAAEC,SAAS,EAAEC,UAAU,EAAEC,mBAAmB,QAAO,0BAA0B;AACxH,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxD,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;EACnCC,cAAc,EAAE;IACdC,eAAe,EAAE;EACnB,CAAC;EACDC,YAAY,EAAE;IACVD,eAAe,EAAE;EACrB;AACF,CAAC,CAAC,CAAC;AAEL,MAAME,cAAc,GAAGC,IAAA,IAAiF;EAAA,IAA/E;IAACC,OAAO;IAAEC,KAAK;IAAEC,KAAK;IAAEC,aAAa;IAAEC,aAAa;IAAEC,YAAY;IAAEC;EAAI,CAAC,GAAAP,IAAA;EAC9F,oBAAOP,OAAA,CAACP,SAAS;IAAAsB,QAAA,eACbf,OAAA,CAACT,kBAAkB;MACbyB,EAAE,EAAE;QACF,mCAAmC,EAAE;UAAEC,SAAS,EAAE;QAAO;MAC3D,CAAE;MACJC,EAAE,EAAC,cAAc;MACjBC,gBAAgB;MAChBR,aAAa,EAAIA,aAAc;MAC/BH,OAAO,EAAEA,OAAQ;MACjBY,aAAa;MACbP,YAAY,EAAEA,YAAa;MAC3BQ,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACV,aAAa,CAAE;MAClDW,SAAS,eAAEvB,OAAA,CAACL,mBAAmB;QAAAoB,QAAA,eAC/Bf,OAAA,CAACN,UAAU;UAAAqB,QAAA,eAACf,OAAA,CAACF,YAAY;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAa;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB;MACnBC,WAAW,EAAGC,MAAM,iBACpB7B,OAAA,CAACR,eAAe;QAAA,GACZqC,MAAM;QACVb,EAAE,EAAE;UACA,sCAAsC,EAAE;YACtC,cAAc,EAAE;cACtBc,WAAW,EAAErB;YACP;UACF;QACF,CAAE;QACJC,KAAK,EAAEA,KAAM;QACbqB,eAAe,EAAE;UACbC,KAAK,EAAE;YAAEvB,KAAK,EAAEA;UAAK;QACvB,CAAE;QACJwB,UAAU,EAAE;UACV,GAAGJ,MAAM,CAACI,UAAU;UACpBC,YAAY,EAAE,cAAc,CAAE;QAChC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAID;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAChB,CAAC;AAAAQ,EAAA,GAxCK7B,cAAc;AA0CpBA,cAAc,CAAC8B,SAAS,GAAG;EACvB5B,OAAO,EAAEX,SAAS,CAACwC,MAAM;EACzB3B,KAAK,EAAEb,SAAS,CAACyC,MAAM;EACvB7B,KAAK,EAAEZ,SAAS,CAACyC,MAAM;EACvB3B,aAAa,EAAEd,SAAS,CAACyC,MAAM;EAC/B1B,aAAa,EAAEf,SAAS,CAACyC,MAAM;EAC/BzB,YAAY,EAAEhB,SAAS,CAAC0C;AAC5B,CAAC;AAED,eAAejC,cAAc;AAAA,IAAA6B,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}